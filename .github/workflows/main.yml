# .github/workflows/build-multi-os.yml
name: Build GUI Binaries

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.10.18"]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: PyInstaller build
        run: |
          # Use --onefile for a single-bundle exe/.app
          # Use --windowed (aka --noconsole) to suppress the console
          pyinstaller \
            --onefile \
            --windowed \
            --name MyApp \
            main.py

      - name: Package artifact
        if: matrix.os == 'macos-latest'
        run: |
          # macOS .app comes out in dist/MyApp.app
          ditto -c -k --keepParent dist/MyApp.app MyApp-macos.zip

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MyApp-windows
          path: dist/MyApp.exe

      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: MyApp-macos
          path: MyApp-macos.zip

